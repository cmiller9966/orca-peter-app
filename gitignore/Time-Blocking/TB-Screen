// components/TimeBlocking.js
import React, { useState } from 'react';
import { View, Text, StyleSheet, Modal, TextInput, TouchableOpacity, FlatList } from 'react-native';
import { Calendar } from 'react-native-calendars';

const TimeBlocking = () => {
  const [selectedDate, setSelectedDate] = useState('');
  const [blocks, setBlocks] = useState({});
  const [modalVisible, setModalVisible] = useState(false);
  const [newBlock, setNewBlock] = useState('');

  const addBlock = () => {
    if (newBlock && selectedDate) {
      const dateBlocks = blocks[selectedDate] || [];
      setBlocks({ ...blocks, [selectedDate]: [...dateBlocks, newBlock] });
      setNewBlock('');
      setModalVisible(false);
    }
  };

  return (
    <View style={styles.container}>
      <Calendar onDayPress={(day) => setSelectedDate(day.dateString)} markedDates={{ [selectedDate]: { selected: true } }} />
      <Text style={styles.selectedDateText}>Selected Date: {selectedDate}</Text>
      <FlatList
        data={blocks[selectedDate] || []}
        keyExtractor={(item, index) => index.toString()}
        renderItem={({ item }) => <Text style={styles.blockItem}>{item}</Text>}
      />
      <TouchableOpacity style={styles.addButton} onPress={() => setModalVisible(true)}>
        <Text style={styles.addButtonText}>+ Add Block</Text>
      </TouchableOpacity>
      
      {/* Modal for adding time blocks */}
      <Modal visible={modalVisible} transparent={true} animationType="slide">
        <View style={styles.modalContainer}>
          <View style={styles.modalContent}>
            <TextInput
              placeholder="Block Description"
              value={newBlock}
              onChangeText={setNewBlock}
              style={styles.input}
            />
            <TouchableOpacity onPress={addBlock} style={styles.saveButton}>
              <Text style={styles.saveButtonText}>Save Block</Text>
            </TouchableOpacity>
            <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.cancelButton}>
              <Text style={styles.cancelButtonText}>Cancel</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </View>
  );
};

export default TimeBlocking;

const styles = StyleSheet.create({
  container: { flex:1, padding: 10 },
  selectedDateText: { fontSize: 18, marginVertical: 10 },
  blockItem: { backgroundColor: '#f0f0f0', padding: 10, marginVertical: 5, borderRadius: 5 },
  addButton: { backgroundColor: '#28a745', padding: 15, borderRadius: 30, position: 'absolute', bottom: 30, right: 30 },
  addButtonText: { color: 'white', fontWeight: 'bold' },
  modalContainer: { flex:1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },
  modalContent: { width: '80%', backgroundColor: 'white', padding: 20, borderRadius: 10 },
  input: { borderBottomWidth: 1, marginBottom: 10 },
  saveButton: { backgroundColor: '#28a745', padding: 10, borderRadius: 5, marginTop: 10 },
  saveButtonText: { color: 'white', textAlign: 'center' },
  cancelButton: { backgroundColor: '#dc3545', padding: 10, borderRadius: 5, marginTop: 10 },
  cancelButtonText: { color: 'white', textAlign: 'center' },
});
